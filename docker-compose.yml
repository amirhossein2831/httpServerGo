services:
  app:
    build: .
    container_name: app
    restart: on-failure
    network_mode: "host"
    depends_on:
      mysql:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - .:/app

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: on-failure
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: "BookManagement"
      MYSQL_ROOT_PASSWORD: "password"
    volumes:
      - ./data/db:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3

  db:
    image: postgres:latest
    container_name: postgres
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "BookManagement"
    volumes:
      - pg-data:/var/lib/postgresql/data'
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "root", "-d", "BookManagement", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3

  rabbit:
    image: rabbitmq:3.13.2-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - rabbitmq_go_net
    volumes:
      - ./rabbit-data/data:/var/lib/rabbitmq/
      - ./rabbit-data/log:/var/log/rabbitmq
    healthcheck:
      test: [ "CMD", "sh", "-c", "rabbitmqctl status && curl -f http://localhost:15672 > /dev/null 2>&1" ]
      interval: 30s
      timeout: 10s
      retries: 5

#
#  elasticsearch:
#    container_name: elastic
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
#    ports:
#      - "9200:9200"
#    environment:
#      - discovery.type=single-node
#
#  kibana:
#    container_name: kibana
#    image: docker.elastic.co/kibana/kibana:7.15.0
#    ports:
#      - "5601:5601"
#    depends_on:
#      - elasticsearch
#    environment:
#      ELASTIC_HOST: "http://elasticsearch:9200"
#
#
#  filebeat:
#    build:
#      context: ./filebeat
#    container_name: filebeat
#    command: filebeat -e -strict.perms=false
#    volumes:
#      - ./logs:/logs/
#      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
#    depends_on:
#      - elasticsearch
#      - kibana

volumes:
  data:
    driver: local
  pg-data:
    driver: local
  rabbit-data:
    driver: local

networks:
  rabbitmq_go_net:
